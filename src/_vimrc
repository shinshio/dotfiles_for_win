set fileencodings=utf-8,cp932,sjis

" dein---------------------------------
let s:dein_dir = expand('~/.cache/dein')
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

" dein installation check {{{
if &runtimepath !~# '/dein.vim'
  if !isdirectory(s:dein_repo_dir)
    execute '!git clone https://github.com/Shougo/dein.vim' s:dein_repo_dir
  endif
  execute 'set runtimepath^=' . s:dein_repo_dir
endif
" }}}

" begin settings {{{
if dein#load_state(s:dein_dir)
  call dein#begin(s:dein_dir)

  " .toml file
  let s:rc_dir = expand('~/.vim')
  if !isdirectory(s:rc_dir)
    call mkdir(s:rc_dir, 'p')
  endif
  let s:toml = s:rc_dir . '/dein.toml'
  let s:toml_lazy = s:rc_dir . '/dein_lazy.toml'

  " read toml and cache
  call dein#load_toml(s:toml, {'lazy': 0})
  call dein#load_toml(s:toml_lazy, {'lazy': 1})

  " end settings
  call dein#end()
  call dein#save_state()
endif
" }}}

" plugin installation check {{{
if dein#check_install()
  call dein#install()
endif
" }}}

" plugin remove check {{{
let s:removed_plugins = dein#check_clean()
if len(s:removed_plugins) > 0
  call map(s:removed_plugins, "delete(v:val, 'rf')")
  call dein#recache_runtimepath()
endif

" vim-airline-------------------------
let g:airline_theme = 'molokai'
set laststatus=2
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline#extensions#whitespace#mixed_indent_algo = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline_left_sep = '»'
let g:airline_left_sep = '▶'
let g:airline_right_sep = '«'
let g:airline_right_sep = '◀'
let g:airline_symbols.crypt = '🔒'
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = '㏑'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.spell = 'Ꞩ'
let g:airline_symbols.notexists = '∄'
let g:airline_symbols.whitespace = 'Ξ'
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.maxlinenr = ''

" file-------------------------------
"set fenc=utf-8 "file encoding
set noswapfile " no swap file
set nobackup   " no backup file
set noundofile " no undo file
set autoread   " file auto reload
set hidden     " read another file if unsave
set showcmd    " show command
set clipboard=unnamed,autoselect " use clipboard
set wildmode=list:full " tab complete with list

" view----------------------------
set number " line number
" set cursorline " highlight cursor line
" set cursorcolumn " highlight current column
set virtualedit=onemore " block cursor
set smartindent " smart indent
set visualbell " show beep
set showmatch  " highlight match brackets
syntax enable " syntax highlight
set nofoldenable " no line folder
set nowrap       " no line wrap

" status line(no powerline)-------------------
"set statusline=%F  " file path
"set statusline+=%m " flag of no save
"set statusline+=%r " flag of readonly
"set statusline+=%h " flag of help
"set statusline+=%w " flag of preview
"set statusline+=%= " separate line
"set statusline+=[ENC=%{&fileencoding}] " file encoding
"set statusline+=[ROW=%l/%L] " row number
"set laststatus=2   " show last status

" Tab behavior-----------------------------
set list listchars=tab:\?\- " change tab character
set expandtab    " change tab to spaces
set tabstop=4    " tab stop
set shiftwidth=4 " auto tab indent

" search---------------------------
set ignorecase " if lowercase, search upper and lower
set smartcase  " if uppercase, search only upper
set incsearch  " highlight character at every input character
set wrapscan   " wrap search results
set hlsearch   " highlight searched word

" key binding----------------------------------------
" jj <= ESC
inoremap <silent> jj <ESC>
" shift-H <= 0
noremap <S-h> 0
" shift-L <= $
noremap <S-l> $
" +,- <= incrementm, decriment
nnoremap + <C-a>
nnoremap - <C-x>
" ESC>ESC <= :nohlsearch
nmap <Esc><Esc> :nohlsearch<CR><Esc>
" if wrapped line, cursor only j, k
nnoremap j gj
nnoremap k gk

" shell-------------------------
" powershell
set shell=C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
set shellcmdflag=-c
set shellquote=\"
set shellxquote=

" plugin-----------------------
" .md
au BufRead,BufNewFile *.md set filetype=markdown
let g:previm_disable_default_css = 1
let g:previm_custom_css_path = 'C:/Users/10035637417/vimfiles/css/markdown.css'
nnoremap <F5> :PrevimOpen<CR>
" plantuml
let g:plantuml_executable_script="C:/tools/plantuml/plantuml.bat"
au FileType plantuml command! OpenUml :!Start-Process chrome %:p
au Filetype markdown command! Mdpu2png : ! "C:\work\powershell\scripts\mdpu2png.ps1" %:p
nnoremap <F8> :Mdpu2png<CR>
" nerdtree
noremap <F4> :NERDTreeToggle<CR>
" colorscheme
"colorscheme molokai
